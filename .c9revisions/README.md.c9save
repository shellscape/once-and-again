{"ts":1375817445726,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"once-and-again\n==============\n\nResettable _.once()\n"]],"start1":0,"start2":0,"length1":0,"length2":51}]],"length":51}
{"contributors":[],"silentsave":false,"ts":1375817581557,"patch":[[{"diffs":[[0,".once()\n"],[1,"\nOverrides _.prototype.once to return a function which accepts an argument to force a reset on the function, letting it run again. To reset the function:\n\n    var runOnceFunction = _(function () {\n        console.log('only run once');\n    }).once();\n    \n    var initialResult = runOnceFunction(); // true result\n    var memoResult = runOnceFunction(); // memoized result, function not run\n    var newResult = runOnceFunction(true); // true result\n"]],"start1":43,"start2":43,"length1":8,"length2":456}]],"length":499,"saved":false}
